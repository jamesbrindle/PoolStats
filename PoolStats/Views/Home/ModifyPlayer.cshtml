@model PoolStats.Models.Player

<script>
    var el = document.getElementById('mainImage');
    el.parentNode.removeChild(el);
</script>

<script>
    var loadFile = function (event) {
        var prevDiv = document.getElementById('imgPreviewDiv');
        prevDiv.setAttribute("style", "text-align: center; width: 100%; display: block;");

        var output = document.getElementById('prevImage');
        output.src = URL.createObjectURL(event.target.files[0]);
    };

    function rotateLeft() {
        var output = document.getElementById('prevImage');
        var rotateVal = document.getElementById("rotateVal");

        if (rotateVal.value == '0') {
            output.setAttribute("style", "-moz-transform:rotate(-90deg); -webkit-transform:rotate(-90deg); -o-transform:rotate(-90deg); -ms-transform:rotate(-90deg); width: 250px;");
            rotateVal.value = '-90';
        }
        else if (rotateVal.value == "-90") {
            output.setAttribute("style", "-moz-transform:rotate(-180deg); -webkit-transform:rotate(-180deg); -o-transform:rotate(-180deg); -ms-transform:rotate(-180deg); width: 250px;");
            rotateVal.value = '-180';
        }
        else if (rotateVal.value == "-180") {
            output.setAttribute("style", "-moz-transform:rotate(-270deg); -webkit-transform:rotate(-270deg); -o-transform:rotate(-270deg); -ms-transform:rotate(-270deg); width: 250px;");
            rotateVal.value = '-270';
        }
        else if (rotateVal.value == "-270") {
            output.setAttribute("style", "-moz-transform:rotate(0deg); -webkit-transform:rotate(0deg); -o-transform:rotate(0deg); -ms-transform:rotate(0deg); width: 250px;");
            rotateVal.value = '0';
        }
        else if (rotateVal.value == "90") {
            output.setAttribute("style", "-moz-transform:rotate(0deg); -webkit-transform:rotate(0deg); -o-transform:rotate(0eg); -ms-transform:rotate(0deg); width: 250px;");
            rotateVal.value = '0';
        }
        else if (rotateVal.value == "180") {
            output.setAttribute("style", "-moz-transform:rotate(90deg); -webkit-transform:rotate(90deg); -o-transform:rotate(90deg); -ms-transform:rotate(90deg); width: 250px;");
            rotateVal.value = '90';
        }
        else if (rotateVal.value == "270") {
            output.setAttribute("style", "-moz-transform:rotate(180deg); -webkit-transform:rotate(180deg); -o-transform:rotate(180deg); -ms-transform:rotate(180deg); width: 250px;");
            rotateVal.value = '180';
        }
    }

    function rotateRight() {
        var output = document.getElementById('prevImage');
        var rotateVal = document.getElementById("rotateVal");

        if (rotateVal.value == '0') {
            output.setAttribute("style", "-moz-transform:rotate(90deg); -webkit-transform:rotate(90deg); -o-transform:rotate(90deg); -ms-transform:rotate(90deg); width: 250px;");
            rotateVal.value = '90';
        }
        else if (rotateVal.value == "90") {
            output.setAttribute("style", "-moz-transform:rotate(180deg); -webkit-transform:rotate(180deg); -o-transform:rotate(180deg); -ms-transform:rotate(180deg); width: 250px;");
            rotateVal.value = '180';
        }
        else if (rotateVal.value == "180") {
            output.setAttribute("style", "-moz-transform:rotate(270deg); -webkit-transform:rotate(270deg); -o-transform:rotate(270deg); -ms-transform:rotate(270deg); width: 250px;");
            rotateVal.value = '270';
        }
        else if (rotateVal.value == "270") {
            output.setAttribute("style", "-moz-transform:rotate(0deg); -webkit-transform:rotate(0deg); -o-transform:rotate(0deg); -ms-transform:rotate(0deg); width: 250px;");
            rotateVal.value = '0';
        }
        else if (rotateVal.value == "-90") {
            output.setAttribute("style", "-moz-transform:rotate(0deg); -webkit-transform:rotate(0deg); -o-transform:rotate(0eg); -ms-transform:rotate(0deg); width: 250px;");
            rotateVal.value = '0';
        }
        else if (rotateVal.value == "-180") {
            output.setAttribute("style", "-moz-transform:rotate(-90deg); -webkit-transform:rotate(-90deg); -o-transform:rotate(-90deg); -ms-transform:rotate(-90deg); width: 250px;");
            rotateVal.value = '-90';
        }
        else if (rotateVal.value == "270") {
            output.setAttribute("style", "-moz-transform:rotate(-180deg); -webkit-transform:rotate(-180deg); -o-transform:rotate(-180deg); -ms-transform:rotate(-180deg); width: 250px;");
            rotateVal.value = '-180';
        }
    }

</script>

@using (Html.BeginForm("SubmitChangePlayer", "Home", FormMethod.Post, new { @encType = "multipart/form-data" }))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        <h4>Modify Player</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                <span class="control-label col-md-2" style="font-weight: bold; margin-left: -14px">Player Name</span><br /><br />
                @Html.HiddenFor(model => Model.Id)
                @Html.EditorFor(model => Model.PlayerName, new { htmlAttributes = new { @class = "form-control" } })<br />
                @Html.ValidationMessageFor(model => Model.PlayerName, "", new { @class = "text-danger" })

                <span>Male?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>@Html.CheckBoxFor(model => Model.Male, new { htmlAttributes = new { @class = "form-control" } })<br /><br />

                @{                    
                    string defMessage = Model.Image == null ? " (Default)" : "";
                }

                <span class="control-label col-md-2" style="font-weight: bold; margin-left: -14px;">Current Profile Picture @defMessage</span><br /><br />

                @if (Model.Image == null)
                {
                    if (Model.Male)
                    {
                        <img src="@Url.Content("/Content/Images/default_profile_male.jpg")" alt="Image" class="img-responsive" style="text-align: center; width: 50%" /><br />
                    }
                    else
                    {
                        <img src="@Url.Content("/Content/Images/default_profile_female.jpg")" alt="Image" class="img-responsive" style="text-align: center; width: 50%" /><br />
                    }
                }
                else
                {
                    <img src="@Url.Content("/Content/ProfileImages/" + Model.Id + ".jpg")" alt="Image" class="img-responsive" style="text-align: center; width: 50%" /><br />
                }

                <span class="control-label col-md-2" style="font-weight: bold; margin-left: -14px;">Change Profile Picture</span><br /><br />
                <input type="file" name="file" id="file" style="width: 100%;" accept=".jpg,.jpeg,.png,image/pjpeg,image/jpeg,image/pjpeg,image/jpeg,image/png" onchange="loadFile(event)"  /><br />

                <div id="imgPreviewDiv" style="text-align: center; width: 100%; display: none;">
                    <a href="#" onclick="rotateLeft()">Rotate Left</a>&nbsp;&nbsp;&nbsp;<a href="#" onclick="rotateRight()">Rotate Right</a><br /><br /><br /><br />
                    <input type="hidden" id="rotateVal" name="rotateVal" value="0" />
                    <img id="prevImage" src="#" style="width: 250px" /><br /><br /><br />
                </div>

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                @using (Html.BeginForm("SubmitChangePlayer", "Home"))
                {
                    <input type="submit" value="Submit" class="btn btn-default" />
                }

            </div>
        </div>
    </div>
}

<br />

<div>
    @Html.ActionLink("Back to List", "CreatePlayers", new { id = "" })
</div>
<br />
<br />

<div class="form-horizontal">

    @using (Html.BeginForm("DeletePlayer", "Home", FormMethod.Post, new { @encType = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => Model.Id)

        <input style="color: red; font-size: 11px;" type="submit" value="Delete Player" class="btn btn-default" /><br /><br />
        <p style="font-size: 11px;">* Delete will only be successfull if the player doesn't exist in any match.</p>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
